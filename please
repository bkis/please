#!/bin/bash

#################
#               #
#  Oh, PLEASE!  #
#               #
#################

#
#    TEXT FORMATTING CODES
#

TF_X="\033[0m"
TF_XC="\033[39m"
TF_XB="\033[21m"
TF_GREEN="\033[32m"
TF_BOLD="\033[1m"
TF_DIM="\033[2m"

#
#    VARIABLES
#

PLS_DEV=1 # turn development mode ON (1) or OFF (0)
PLS_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )" # thanks to https://stackoverflow.com/a/246128
PLS_FILE="${HOME}/.please"
PLS_ALIAS="alias please="${PLS_DIR}/please" # please don't remove this comment, please"
PLS_BASHRC="${HOME}/.bashrc"
PLS_DELIMITER=": "
PLS_MSG_PREFIX="${TF_GREEN}${TF_BOLD}⸢please⸥${TF_X}"
PLS_MSG_INSTALL_ALREADY="${PLS_MSG_PREFIX} is apparently ${TF_BOLD}already installed!${TF_X}"
PLS_MSG_INSTALL_OK="${PLS_MSG_PREFIX} ${TF_BOLD}has been installed!${TF_XB} Just start ${TF_BOLD}a fresh terminal${TF_XB} to use ${PLS_MSG_PREFIX}"
PLS_PATTERN_NOTE="^(note|remember|save)$"



#
#    SET UP DEV MODE
#

if [ "${PLS_DEV}" -eq 1 ]; then
    # modify some values for development
    PLS_FILE="${PLS_DIR}/dev/.please"
    PLS_BASHRC="${PLS_DIR}/dev/.bashrc"
fi

#
#    FUNCTIONS
#

# FUNCTION: help
function pls_help() {
    # TODO
    # install
    # uninstall
    # note how to 
    echo -e "${PLS_MSG_PREFIX} help... (WIP)"
    exit 1
}

# FUNCTION: install
function pls_install() {
    if grep -q "${PLS_ALIAS}" "${PLS_BASHRC}" && [ -f "${PLS_FILE}" ]; then
        echo -e "${PLS_MSG_INSTALL_ALREADY}"
        exit 1
    else
        echo -e "${PLS_MSG_PREFIX} be patient, ${TF_BOLD}it won't take long${TF_X} ..."
        # create .please file in $HOME
        [ -f "${PLS_FILE}" ] || touch "${PLS_FILE}"
        # backup .bashrc
        echo -e "${PLS_MSG_PREFIX} of course there will be a ${TF_BOLD}backup${TF_XB} of ${PLS_BASHRC}!"
        [ -f "${PLS_BASHRC}" ] && cp "${PLS_BASHRC}" "${PLS_BASHRC}_backup"
        # append alias to .bashrc
        echo -e "\n\n${PLS_ALIAS}" >> "${PLS_BASHRC}"
        echo -e "${PLS_MSG_INSTALL_OK}"
        exit 0
    fi
}

# FUNCTION: uninstall
function pls_uninstall() {
    # ask for confirmation
    echo -e -n "${PLS_MSG_PREFIX}"
    read -p " do you ${TF_BOLD}really${TF_XB} want me to uninstall myself? (y/n)" -n 1 -r
    echo
    if [[ ${REPLY} =~ ^[Yy]$ ]]; then
        # uninstall...
        # backup .bashrc
        echo -e "${PLS_MSG_PREFIX} of course ${TF_BOLD}I will back up${TF_XB} ${PLS_BASHRC}!"
        [ -f "${PLS_BASHRC}" ] && cp "${PLS_BASHRC}" "${PLS_BASHRC}_backup"
        # remove alias line from .bashrc
        grep -v -F "${PLS_ALIAS}" "${PLS_BASHRC}" > "/tmp/pleasetmp"  
        mv "/tmp/pleasetmp" "${PLS_BASHRC}"
        # inform that .please file will be kept
        echo -e "${PLS_MSG_PREFIX} be aware that ${PLS_FILE} will ${TF_BOLD}not${TF_XB} be deleted. Just in case :)"
        exit 0
    fi
    echo -e "${PLS_MSG_PREFIX} don't change your mind again!"
    exit 0
}

# FUNCTION: note how to
function pls_note() {
    # if no description entered, show help
    [[ ${@#} = 0 ]] && pls_help
    # read param and remove delimiter if present (very unlikely)
    PLS_NEW_DESC=$(echo "$@" | sed "s/$PLS_DELIMITER/ /")
    # remove newlines from description
    PLS_NEW_DESC=${PLS_NEW_DESC//'\n'/' '}
    # ask for one-liner to note
    echo -e -n "${PLS_MSG_PREFIX}${TF_DIM} just once, tell me ${TF_X}${TF_BOLD}how to ${PLS_NEW_DESC}${TF_X}:${TF_GREEN}"
    read -p " " PLS_NEW_CMD
    # append to .please file
    echo "${PLS_NEW_DESC}${PLS_DELIMITER}${PLS_NEW_CMD//'\n'/' '}" >> "${PLS_FILE}"
    exit 0
}

# FUNCTION: look for
function pls_look() {
    # if nothing entered, show help
    [[ ${@#} = 0 ]] && pls_help
    # read param
    PLS_LOOK_FOR="$@"
    # look for keyword(s)
    MATCHES=$(grep -F "$PLS_LOOK_FOR" "$PLS_FILE")
    if [[ ${MATCHES#} < 1 ]]; then
        echo -e "${PLS_MSG_PREFIX} don't be angry, but ${TF_BOLD}I didn't find anything${TF_XB} :("
    else
        echo -e "${PLS_MSG_PREFIX}${TF_DIM} look at these beautiful memories! ${TF_X}${TF_BOLD}We noted how to ...${TF_X}"
        echo -e "$MATCHES" | \
            while IFS= read line; do
                echo -e "       ${TF_BOLD}${TF_GREEN}⤳${TF_XC} ${line//$PLS_DELIMITER/$PLS_DELIMITER$TF_X$TF_GREEN}${TF_X}"
            done
    fi
    exit 0
}

#
#    PARSE ARGS
#

# TEST: no args?
[ $# -eq 0 ] && pls_help

# TEST: install?
[ "$1" = "install" ] && pls_install

# TEST: uninstall?
[ "$1" = "uninstall" ] && pls_uninstall

# TEST: note?
[[ $1 =~ $PLS_PATTERN_NOTE ]] && [ "$2" = "how" ] && [ "$3" = "to" ] && pls_note "${@:4}"

# TEST: look for?
[ "$1" = "look" ] && [ "$2" = "for" ] && pls_look "${@:3}"

# TEST: just checkin'?
[ "$1" = "please" ] && echo -e "${PLS_MSG_PREFIX} no begging, please!" && exit 0

# ELSE ...
pls_help