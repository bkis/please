#!/bin/bash

#################
#               #
#  Oh, PLEASE!  #
#               #
#################

#
#    DEV MODE ON / OFF
#

PLS_DEV=0 # ON (1) or OFF (0)

#
#    TEXT FORMATTING CODES (in case it's supported by the terminal)
#

TF_X="\033[0m" # unset all styles
TF_XC="\033[39m" # unset color
TF_GREEN="\033[32m" # set foreground color to green
TF_RED="\033[31m" # set foreground color to red
TF_BOLD="\033[1m" # set text style to bold
TF_DIM="\033[2m" # set text style to dim
TF_BLINK="\033[25m" # set text style to blink

#
#    VARIABLES
#

PLS_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )" # thanks to https://stackoverflow.com/a/246128
PLS_FILE="${HOME}/.please"
PLS_ALIAS="alias please="${PLS_DIR}/please" # please don't remove this comment, please"
PLS_BASHRC="${HOME}/.bashrc"
PLS_DELIMITER=": "
PLS_MSG_PREFIX="${TF_GREEN}${TF_BOLD}⸢please⸥${TF_X}"
PLS_NEWLINE="\n"

#
#    SET UP DEV MODE
#

if [ "${PLS_DEV}" -eq 1 ]; then
    # modify some values for development
    PLS_FILE="${PLS_DIR}/dev/.please"
    PLS_BASHRC="${PLS_DIR}/dev/.bashrc"
fi

#
#    FUNCTIONS
#

# FUNCTION: help
function pls_help() {
    printf "${PLS_MSG_PREFIX} ${TF_DIM}let me show you the available commands:${TF_X}${PLS_NEWLINE}"
    printf "${TF_BOLD}${TF_GREEN}  ⤳ ${TF_X}${TF_GREEN}please note how to ${TF_RED}<description>${TF_X} : note a new one-liner${PLS_NEWLINE}"
    printf "${TF_BOLD}${TF_GREEN}  ⤳ ${TF_X}${TF_GREEN}please look for ${TF_RED}<keyword>${TF_X}        : look for notes containing <keyword>${PLS_NEWLINE}"
    printf "${TF_BOLD}${TF_GREEN}  ⤳ ${TF_X}${TF_GREEN}please please${TF_X}                    : don't use this command!${PLS_NEWLINE}"
    printf "${TF_BOLD}${TF_GREEN}  ⤳ ${TF_X}${TF_GREEN}please help${TF_X}                      : just try and see what happens!${PLS_NEWLINE}"
    printf "${TF_BOLD}${TF_GREEN}  ⤳ ${TF_X}${TF_GREEN}please uninstall yourself${TF_X}        : remove ${TF_BOLD}please${TF_X} command from system${PLS_NEWLINE}"
    printf "${TF_BOLD}${TF_GREEN}  ⤳ ${TF_X}${TF_GREEN}./please install yourself${TF_X}        : initially install ${TF_BOLD}please${TF_X}${PLS_NEWLINE}"
}

# FUNCTION: help
function pls_is_installed() {
    if grep -q "${PLS_ALIAS}" "${PLS_BASHRC}" && [ -f "${PLS_FILE}" ]; then
        return 0
    else
        return 1
    fi
}

# FUNCTION: install
function pls_install() {
    if pls_is_installed; then
        printf "${PLS_MSG_PREFIX} is apparently ${TF_BOLD}already installed!${TF_X}${PLS_NEWLINE}"
        exit 1
    else
        printf "${PLS_MSG_PREFIX} be patient, ${TF_BOLD}it won't take long${TF_X} ...${PLS_NEWLINE}"
        # create .please file in $HOME
        [ -f "${PLS_FILE}" ] || touch "${PLS_FILE}"
        # backup .bashrc
        printf "${PLS_MSG_PREFIX} note that ${TF_BOLD}I will backup${TF_X} ${PLS_BASHRC} !${PLS_NEWLINE}"
        [ -f "${PLS_BASHRC}" ] && cp "${PLS_BASHRC}" "${PLS_BASHRC}_backup"
        # append alias to .bashrc
        printf "\n\n${PLS_ALIAS}${PLS_NEWLINE}" >> "${PLS_BASHRC}"
        printf "${PLS_MSG_PREFIX} ${TF_BOLD}has been installed!${TF_X} Just ${TF_BLINK}${TF_RED}start ${TF_BOLD}a fresh terminal${TF_X} to use ${PLS_MSG_PREFIX}${PLS_NEWLINE}"
        exit 0
    fi
}

# FUNCTION: uninstall
function pls_uninstall() {
    if ! pls_is_installed; then
        printf "${PLS_MSG_PREFIX} is apparently ${TF_BOLD}not installed!${TF_X}${PLS_NEWLINE}"
        printf "${PLS_MSG_PREFIX} run ${TF_RED}'./please install yourself'${TF_X} from where you put the ${PLS_MSG_PREFIX} script!${PLS_NEWLINE}"
        exit 1
    fi
    # ask for confirmation
    printf "${PLS_MSG_PREFIX} do you ${TF_BLINK}${TF_BOLD}really${TF_X} want me to uninstall myself? ${TF_BOLD}${TF_RED}(y/n)${TF_X}"
    read -p " " -n 1 -r
    printf "${PLS_NEWLINE}"
    if [[ ${REPLY} =~ ^[Yy]$ ]]; then
        # uninstall...
        # backup .bashrc
        printf "${PLS_MSG_PREFIX} note that ${TF_BOLD}I will backup${TF_X} ${PLS_BASHRC} !${PLS_NEWLINE}"
        [ -f "${PLS_BASHRC}" ] && cp "${PLS_BASHRC}" "${PLS_BASHRC}_backup"
        # remove alias line from .bashrc
        grep -v -F "${PLS_ALIAS}" "${PLS_BASHRC}" > "/tmp/pleasetmp"  
        mv "/tmp/pleasetmp" "${PLS_BASHRC}"
        # inform that .please file will be kept
        printf "${PLS_MSG_PREFIX} be aware that${TF_GREEN} ${PLS_FILE} ${TF_X}will ${TF_BOLD}not${TF_X} be deleted. Just in case :)${PLS_NEWLINE}"
        exit 0
    fi
    printf "${PLS_MSG_PREFIX} don't change your mind again!${PLS_NEWLINE}"
    exit 0
}

# FUNCTION: note how to
function pls_note() {
    # if no description entered, show help
    [[ ${@#} = 0 ]] && pls_help && exit 1
    # read param and remove delimiter if present (very unlikely)
    PLS_NEW_DESC=$(printf "$@" | sed "s/$PLS_DELIMITER/ /")
    # remove newlines from description
    PLS_NEW_DESC=${PLS_NEW_DESC//'\n'/' '}
    # ask for one-liner to note
    printf "${PLS_MSG_PREFIX}${TF_DIM} How do you ${TF_X}${TF_BOLD}${PLS_NEW_DESC}${TF_X}?${TF_GREEN} >"
    read -p " " PLS_NEW_CMD
    # append to .please file
    printf "${PLS_NEW_DESC}${PLS_DELIMITER}${PLS_NEW_CMD//'\n'/' '}${PLS_NEWLINE}" >> "${PLS_FILE}"
    printf "${PLS_MSG_PREFIX} ${TF_DIM}I noted it down for you. Don't mention it.${TF_X}${PLS_NEWLINE}"
    exit 0
}

# FUNCTION: look for
function pls_look() {
    # if nothing entered, show help
    [[ ${@#} = 0 ]] && pls_help && exit 1
    # read param
    PLS_LOOK_FOR="$@"
    # look for keyword(s)
    MATCHES=$(grep -F "$PLS_LOOK_FOR" "$PLS_FILE")
    if [[ ${MATCHES#} < 1 ]]; then
        printf "${PLS_MSG_PREFIX} don't be angry, but ${TF_BOLD}I didn't find anything${TF_X} :(${PLS_NEWLINE}"
    else
        printf "${PLS_NEWLINE}"
        printf "${PLS_MSG_PREFIX}${TF_DIM} look at these beautiful memories! ${TF_X}${TF_BOLD}We noted how to ...${TF_X}${PLS_NEWLINE}"
        printf "${PLS_NEWLINE}"
        printf "${MATCHES}${PLS_NEWLINE}" | \
            while IFS= read line; do
                printf "${TF_BOLD}${TF_GREEN}⤳${TF_XC} ${line//$PLS_DELIMITER/$PLS_DELIMITER$PLS_NEWLINE  $TF_X$TF_GREEN}${TF_X}\n"
            done
        printf "${PLS_NEWLINE}"
    fi
    exit 0
}

#
#    PARSE ARGS
#

# TEST: no args?
[ $# -eq 0 ] && pls_help && exit 1

# TEST: install?
[ "$1 $2" = "install yourself" ] && pls_install

# TEST: uninstall?
[ "$1 $2" = "uninstall yourself" ] && pls_uninstall

# TEST: note?
[ "$1 $2 $3" = "note how to" ] && pls_note "${@:4}"

# TEST: look for?
[ "$1 $2" = "look for" ] && pls_look "${@:3}"

# TEST: just checkin'?
[ "$1" = "help" ] && pls_help && exit 0

# TEST: just checkin'?
[ "$1" = "please" ] && printf "${PLS_MSG_PREFIX} no begging, please!${PLS_NEWLINE}" && exit 0

# ELSE ...
pls_help
exit 1